{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({\n  element,\n  useWindow\n}) {\n  if (!isBrowser) return {\n    x: 0,\n    y: 0\n  };\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n  return useWindow ? {\n    x: window.scrollX,\n    y: window.scrollY\n  } : {\n    x: position.left,\n    y: position.top\n  };\n}\n\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\n  const position = useRef(getScrollPosition({\n    useWindow\n  }));\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition({\n      element,\n      useWindow\n    });\n    effect({\n      prevPos: position.current,\n      currPos\n    });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return;\n    }\n\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      throttleTimeout && clearTimeout(throttleTimeout);\n    };\n  }, deps);\n}\nuseScrollPosition.defaultProps = {\n  deps: [],\n  element: false,\n  useWindow: false,\n  wait: null\n};","map":{"version":3,"sources":["/Users/shannelphilp/Desktop/Repositories/home/src/hooks/useScrollPosition.js"],"names":["useRef","useIsomorphicLayoutEffect","isBrowser","window","getScrollPosition","element","useWindow","x","y","target","current","document","body","position","getBoundingClientRect","scrollX","scrollY","left","top","useScrollPosition","effect","deps","wait","throttleTimeout","callBack","currPos","prevPos","handleScroll","setTimeout","addEventListener","removeEventListener","clearTimeout","defaultProps"],"mappings":"AAAA;AACA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AAEA,MAAMC,SAAS,GAAG,OAAOC,MAAP,KAAmB,WAArC;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA3B,EAAmD;AACjD,MAAI,CAACJ,SAAL,EAAgB,OAAO;AAAEK,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAP;AAEhB,QAAMC,MAAM,GAAGJ,OAAO,GAAGA,OAAO,CAACK,OAAX,GAAqBC,QAAQ,CAACC,IAApD;AACA,QAAMC,QAAQ,GAAGJ,MAAM,CAACK,qBAAP,EAAjB;AAEA,SAAOR,SAAS,GACZ;AAAEC,IAAAA,CAAC,EAAEJ,MAAM,CAACY,OAAZ;AAAqBP,IAAAA,CAAC,EAAEL,MAAM,CAACa;AAA/B,GADY,GAEZ;AAAET,IAAAA,CAAC,EAAEM,QAAQ,CAACI,IAAd;AAAoBT,IAAAA,CAAC,EAAEK,QAAQ,CAACK;AAAhC,GAFJ;AAGD;;AAED,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,IAAnC,EAAyChB,OAAzC,EAAkDC,SAAlD,EAA6DgB,IAA7D,EAAmE;AACxE,QAAMT,QAAQ,GAAGb,MAAM,CAACI,iBAAiB,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAAlB,CAAvB;AAEA,MAAIiB,eAAe,GAAG,IAAtB;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAGrB,iBAAiB,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAAjC;AACAc,IAAAA,MAAM,CAAC;AAAEM,MAAAA,OAAO,EAAEb,QAAQ,CAACH,OAApB;AAA6Be,MAAAA;AAA7B,KAAD,CAAN;AACAZ,IAAAA,QAAQ,CAACH,OAAT,GAAmBe,OAAnB;AACAF,IAAAA,eAAe,GAAG,IAAlB;AACD,GALD;;AAOAtB,EAAAA,yBAAyB,CAAC,MAAM;AAC9B,QAAI,CAACC,SAAL,EAAgB;AACd;AACD;;AAED,UAAMyB,YAAY,GAAG,MAAM;AACzB,UAAIL,IAAJ,EAAU;AACR,YAAIC,eAAe,KAAK,IAAxB,EAA8B;AAC5BA,UAAAA,eAAe,GAAGK,UAAU,CAACJ,QAAD,EAAWF,IAAX,CAA5B;AACD;AACF,OAJD,MAIO;AACLE,QAAAA,QAAQ;AACT;AACF,KARD;;AAUArB,IAAAA,MAAM,CAAC0B,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AAEA,WAAO,MAAM;AACXxB,MAAAA,MAAM,CAAC2B,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC;AACAJ,MAAAA,eAAe,IAAIQ,YAAY,CAACR,eAAD,CAA/B;AACD,KAHD;AAID,GArBwB,EAqBtBF,IArBsB,CAAzB;AAsBD;AAEDF,iBAAiB,CAACa,YAAlB,GAAiC;AAC/BX,EAAAA,IAAI,EAAE,EADyB;AAE/BhB,EAAAA,OAAO,EAAE,KAFsB;AAG/BC,EAAAA,SAAS,EAAE,KAHoB;AAI/BgB,EAAAA,IAAI,EAAE;AAJyB,CAAjC","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef } from \"react\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\n\nconst isBrowser = typeof window !== `undefined`;\n\nfunction getScrollPosition({ element, useWindow }) {\n  if (!isBrowser) return { x: 0, y: 0 };\n\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n\n  return useWindow\n    ? { x: window.scrollX, y: window.scrollY }\n    : { x: position.left, y: position.top };\n}\n\nexport function useScrollPosition(effect, deps, element, useWindow, wait) {\n  const position = useRef(getScrollPosition({ useWindow }));\n\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition({ element, useWindow });\n    effect({ prevPos: position.current, currPos });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return;\n    }\n\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n      throttleTimeout && clearTimeout(throttleTimeout);\n    };\n  }, deps);\n}\n\nuseScrollPosition.defaultProps = {\n  deps: [],\n  element: false,\n  useWindow: false,\n  wait: null,\n};\n"]},"metadata":{},"sourceType":"module"}