{"ast":null,"code":"var _jsxFileName = \"/Users/shannelphilp/Desktop/Repositories/home/src/components/home/ProjectCard.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({\n  value\n}) => {\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url,\n    pushed_at\n  } = value;\n  return /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card shadow-lg p-3 mb-5 bg-white rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    as: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, name || /*#__PURE__*/React.createElement(Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 40\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, description || /*#__PURE__*/React.createElement(Skeleton, {\n    count: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 38\n    }\n  }), \" \"), svn_url ? /*#__PURE__*/React.createElement(CardButtons, {\n    svn_url: svn_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(Skeleton, {\n    count: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 58\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), languages_url ? /*#__PURE__*/React.createElement(Language, {\n    languages_url: languages_url,\n    repo_url: svn_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Skeleton, {\n    count: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), value ? /*#__PURE__*/React.createElement(CardFooter, {\n    star_count: stargazers_count,\n    repo_url: svn_url,\n    pushed_at: pushed_at,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(Skeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst CardButtons = ({\n  svn_url\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n    href: `${svn_url}/archive/master.zip`,\n    className: \"btn btn-outline-secondary mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), \" Clone Project\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: svn_url,\n    target: \" _blank\",\n    className: \"btn btn-outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), \" Repo\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: website_url,\n    target: \" _blank\",\n    className: \"btn btn-outline-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), \" Website\"));\n};\n\nconst Language = ({\n  languages_url,\n  repo_url\n}) => {\n  const [data, setData] = useState([]);\n  const handleRequest = useCallback(async () => {\n    try {\n      const response = await axios.get(languages_url);\n      return setData(response.data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [languages_url]);\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n  const array = [];\n  let total_count = 0;\n\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, \"Languages:\", \" \", array.length ? array.map(language => /*#__PURE__*/React.createElement(\"a\", {\n    key: language,\n    className: \"badge badge-light card-link\",\n    href: repo_url + `/search?l=${language}`,\n    target: \" _blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, language, \":\", \" \", Math.trunc(data[language] / total_count * 1000) / 10, \" %\")) : \"code yet to be deployed.\");\n};\n\nconst Website = ({\n  website_url,\n  repo_url\n}) => {\n  const [data, setData] = useState([]);\n  const handleRequest = useCallback(async () => {\n    try {\n      const response = await axios.get(website_url);\n      return setData(response.data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [website_url]);\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n  const array = [];\n  let total_count = 0;\n\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, \"Website:\", \" \", array.length ? array.map(website => /*#__PURE__*/React.createElement(\"a\", {\n    key: website,\n    className: \"badge badge-light card-link\",\n    href: repo_url + `/search?l=${website}`,\n    target: \" _blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })) : \"code yet to be deployed.\");\n};\n\nconst CardFooter = ({\n  star_count,\n  repo_url,\n  pushed_at\n}) => {\n  const [updated_at, setUpdated_at] = useState(\"0 mints\");\n  const handleUpdatetime = useCallback(() => {\n    const date = new Date(pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      if (hours < 1) return setUpdated_at(\"just now\");\n      let measurement = hours === 1 ? \"hour\" : \"hours\";\n      return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n    } else {\n      const options = {\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\"\n      };\n      const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n      return setUpdated_at(`on ${time}`);\n    }\n  }, [pushed_at]);\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: repo_url + \"/stargazers\",\n    target: \" _blank\",\n    className: \"text-dark text-decoration-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-dark card-link mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), \" Stars\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge badge-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, star_count))), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \"Updated \", updated_at));\n};\n\nexport default ProjectCard;","map":{"version":3,"sources":["/Users/shannelphilp/Desktop/Repositories/home/src/components/home/ProjectCard.jsx"],"names":["React","useState","useEffect","useCallback","Col","Card","Skeleton","axios","ProjectCard","value","name","description","svn_url","stargazers_count","languages_url","pushed_at","CardButtons","website_url","Language","repo_url","data","setData","handleRequest","response","get","error","console","message","array","total_count","index","push","length","map","language","Math","trunc","Website","website","CardFooter","star_count","updated_at","setUpdated_at","handleUpdatetime","date","Date","nowdate","diff","getTime","hours","measurement","toString","options","day","month","year","time","Intl","DateTimeFormat","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Skeleton from \"react-loading-skeleton\";\nimport axios from \"axios\";\n\nconst ProjectCard = ({ value }) => {\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url,\n    pushed_at,\n  } = value;\n  return (\n    <Col md={6}>\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        <Card.Body>\n          <Card.Title as=\"h5\">{name || <Skeleton />} </Card.Title>\n          {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\n          <Card.Text>{description || <Skeleton count={3} />} </Card.Text>\n          {svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={3} />}\n          <hr />\n          {languages_url ? (\n            <Language languages_url={languages_url} repo_url={svn_url} />\n          ) : (\n            <Skeleton count={3} />\n          )}\n          {value ? (\n            <CardFooter star_count={stargazers_count} repo_url={svn_url} pushed_at={pushed_at} />\n          ) : (\n            <Skeleton />\n          )}\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nconst CardButtons = ({ svn_url }) => {\n  return (\n    <>\n      <a\n        href={`${svn_url}/archive/master.zip`}\n        className=\"btn btn-outline-secondary mr-3\"\n      >\n        <i className=\"fab fa-github\" /> Clone Project\n      </a>\n      <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary\">\n        <i className=\"fab fa-github\" /> Repo\n      </a>\n      <a href={website_url} target=\" _blank\" className=\"btn btn-outline-secondary\">\n        <i className=\"fab fa-github\" /> Website\n      </a>\n    </>\n  );\n};\n\nconst Language = ({ languages_url, repo_url }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(async () => {\n    try {\n      const response = await axios.get(languages_url);\n      return setData(response.data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [languages_url]);\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n  }\n\n  return (\n    <div className=\"pb-3\">\n      Languages:{\" \"}\n      {array.length\n        ? array.map((language) => (\n            <a\n              key={language} \n              className=\"badge badge-light card-link\"\n              href={repo_url + `/search?l=${language}`}\n              target=\" _blank\"\n            >\n              {language}:{\" \"}\n              {Math.trunc((data[language] / total_count) * 1000) / 10} %\n            </a>\n          ))\n        : \"code yet to be deployed.\"}\n    </div>\n  );\n};\n\nconst Website = ({ website_url, repo_url }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(async () => {\n    try {\n      const response = await axios.get(website_url);\n      return setData(response.data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [website_url]);\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (let index in data) {\n    array.push(index);\n    total_count += data[index];\n  }\n\n  return (\n    <div className=\"pb-3\">\n      Website:{\" \"}\n      {array.length\n        ? array.map((website) => (\n            <a\n              key={website} \n              className=\"badge badge-light card-link\"\n              href={repo_url + `/search?l=${website}`}\n              target=\" _blank\"\n            >\n              {/* {website}:{\" \"}\n              {Math.trunc((data[web] / total_count) * 1000) / 10} % */}\n            </a>\n          ))\n        : \"code yet to be deployed.\"}\n    </div>\n  );\n};\n\nconst CardFooter = ({ star_count, repo_url, pushed_at }) => {\n  const [updated_at, setUpdated_at] = useState(\"0 mints\");\n\n  const handleUpdatetime = useCallback(() => {\n    const date = new Date(pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      if (hours < 1) return setUpdated_at(\"just now\");\n      let measurement = hours === 1 ? \"hour\" : \"hours\";\n      return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n    } else {\n      const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n      const time = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n      return setUpdated_at(`on ${time}`);\n    }\n  }, [pushed_at]);\n\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n\n  return (\n    <p className=\"card-text\">\n      <a\n        href={repo_url + \"/stargazers\"}\n        target=\" _blank\"\n        className=\"text-dark text-decoration-none\"\n      >\n        <span className=\"text-dark card-link mr-4\">\n          <i className=\"fab fa-github\" /> Stars{\" \"}\n          <span className=\"badge badge-dark\">{star_count}</span>\n        </span>\n      </a>\n      <small className=\"text-muted\">Updated {updated_at}</small>\n    </p>\n  );\n};\n\nexport default ProjectCard;\n"]},"metadata":{},"sourceType":"module"}